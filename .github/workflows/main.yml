name: CI/CD
on: 
  workflow_dispatch:
 
jobs:
 node-server-build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
         Port: [10031, 10032, 10033, 10034, 10035]
    timeout-minutes: 360
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: vedantmgoyal9/setup-wsl2@main
      - run: apt update -y
        shell: wsl-run {0}
      - run: |
          sudo apt install apt-transport-https ca-certificates curl gnupg lsb-release -y
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt update -y
          sudo apt install docker-ce docker-ce-cli containerd.io -y
          docker pull ${{ secrets.IMAGE }} > /dev/null 2>&1 && \
          sleep 5 && \
          docker run -t -p 10010-10100 ${{ secrets.IMAGE }} bash -c "PORT=${{matrix.Port}} timeout 300m node server.js"
          echo $?
        shell: wsl-run {0}

 server-control:
    runs-on: windows-latest
    needs: node-server-build
    strategy:
      fail-fast: false
      matrix:
         Port: [10031, 10032, 10033, 10034, 10035]
    timeout-minutes: 360
    steps:
      - uses: actions/checkout@v4
      - uses: vedantmgoyal9/setup-wsl2@main
      - run: apt update -y
        shell: wsl-run {0}
      - run: |
          sudo apt install apt-transport-https ca-certificates curl gnupg lsb-release -y
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt update -y
          sudo apt install docker-ce docker-ce-cli containerd.io -y
          docker pull ${{ secrets.IMAGE }} > /dev/null 2>&1 && \
          sleep 5 && \
          docker run -t -p 10010-10100 ${{ secrets.IMAGE }} bash -c "PORT=${{matrix.Port}} timeout 300m node server.js"
          echo $?
        shell: wsl-run {0}
